#!/usr/bin/env node
'use strict';

process.title = 'ALKS';

var program    = require('commander'),
    clc        = require('cli-color'),
    _          = require('underscore'),
    opn        = require('opn'),
    config     = require('../package.json'),
    utils      = require('../lib/utils'),
    Keys       = require('../lib/keys'),
    Developer  = require('../lib/developer'),
    Sessions   = require('../lib/sessions'),
    Iam        = require('../lib/iam');

var outputValues = utils.getOutputValues();

program
    .version(config.version)
    .description('open an AWS console in your browser')
    .option('-o, --openWith [appName]', 'open in a different app (optional)')
    .option('-a, --account [alksAccount]', 'alks account to use')
    .option('-r, --role [alksRole]', 'alks role to use')
    .option('-i, --iam', 'create an IAM session')
    .option('-p, --password [password]', 'my password')
    .option('-v, --verbose', 'be verbose')
    .parse(process.argv);

var alksAccount       = program.account,
    alksRole          = program.role,
    hasAlksAcctRole   = !_.isEmpty(alksAccount) && !_.isEmpty(alksRole),
    output            = program.output,
    logger            = 'sessions-console';

var onComplete = function(err, key){
    if(err){
        return utils.errorAndExit(err);
    }

    if(!_.isEmpty(key.consoleURL)){
        var opts = !_.isEmpty(program.openWith) ? { app: program.openWith } : {};

        opn(key.consoleURL, opts);
    }
    else{
        console.error(clc.red('The selected key does not have a console URL.'));
    }

    utils.log(program, logger, 'checking for updates');
    utils.checkForUpdate();
}

if(_.isUndefined(program.iam)){
    Sessions.getSessionKey(program, logger, hasAlksAcctRole, alksAccount, alksRole, false, onComplete);
}
else{
    Iam.getIAMKey(program, logger, hasAlksAcctRole, alksAccount, alksRole, onComplete);
}